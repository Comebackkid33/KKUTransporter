

@using KKU_DEMO.App_Start
@model KKU_DEMO.Models.Sensor


<head>

    <link rel="stylesheet" href="~/Content/bootstrap-select.css">
    <link rel="stylesheet" href="~/Content/bootstrap-select.min.css">

    <script src="~/Scripts/bootstrap-select.js"></script>
    <script src="~/Scripts/bootstrap-select.min.js"></script>

</head>
@{
    List<SelectListItem> FactoryList = new List<SelectListItem>();
    foreach (var i in ViewBag.FactoryList)

    {
        FactoryList.Add(new SelectListItem() { Text = i.Name.ToString(), Value = i.Id.ToString() });
    }
}


<h2 class ="text-center">Добавить новый датчик</h2>
@using (Html.BeginForm())
{
    <div style="margin: auto; top: 0; right: 0;bottom: 0;left: 0; width: 300px;" id="Form">
       
        <div class="form-group">
            <b>Название датчика:</b>
           
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @style = "width: 220px;" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
         
        </div>

        <div class="form-group">
            <b>Подразделение:</b>
                @Html.DropDownListFor(model => model.FactoryId, FactoryList, new { @class = "selectpicker" })

           
        </div>

        <div class="form-group">
            <b>Уникальный ключ:</b>
            
                <input id="jsIdResult" style="width: 220px;" name="Token" type="text" placeholder="Сгенерируйте ключ..." readonly size="40" class="form-control text-box single-line" />

                @Html.ValidationMessageFor(model => model.Token, "", new { @class = "text-danger", })


        </div>

        <div class="form-group">
            
                <input type="button" value="Сгенерировать" id="jsGenId" class="btn btn-info" onclick="runGuid" />
                <input type="submit" value="Добавить" name="Create" class="btn btn-success" />
           
        </div>


    </div>
    <script language="javascript">
                    function guid() {
                        return s4() + s4() + '-' + s4() + '-' + s4();
                    }

                    function s4() {
                        return Math.floor((1 + Math.random()) * 0x10000)
                            .toString(16)
                            .substring(1);
                    }

                    document.getElementById('jsGenId').addEventListener('click', function () {
                        document.getElementById('jsIdResult').value = guid();
                    });
    </script>

}




